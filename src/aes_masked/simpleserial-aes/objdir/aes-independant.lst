   1               		.file	"aes-independant.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__CCP__ = 0x34
   7               	__tmp_reg__ = 0
   8               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  11               		.cfi_sections	.debug_frame
  12               	.global	aes_indep_init
  14               	aes_indep_init:
  15               	.LFB11:
  16               		.file 1 ".././crypto/aes-independant.c"
   1:.././crypto/aes-independant.c **** /*
   2:.././crypto/aes-independant.c ****     This file is part of the AESExplorer Example Targets
   3:.././crypto/aes-independant.c ****     Copyright (C) 2012 Colin O'Flynn <coflynn@newae.com>
   4:.././crypto/aes-independant.c **** 
   5:.././crypto/aes-independant.c ****     This program is free software: you can redistribute it and/or modify
   6:.././crypto/aes-independant.c ****     it under the terms of the GNU General Public License as published by
   7:.././crypto/aes-independant.c ****     the Free Software Foundation, either version 3 of the License, or
   8:.././crypto/aes-independant.c ****     (at your option) any later version.
   9:.././crypto/aes-independant.c **** 
  10:.././crypto/aes-independant.c ****     This program is distributed in the hope that it will be useful,
  11:.././crypto/aes-independant.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:.././crypto/aes-independant.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:.././crypto/aes-independant.c ****     GNU General Public License for more details.
  14:.././crypto/aes-independant.c **** 
  15:.././crypto/aes-independant.c ****     You should have received a copy of the GNU General Public License
  16:.././crypto/aes-independant.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  17:.././crypto/aes-independant.c **** */
  18:.././crypto/aes-independant.c **** 
  19:.././crypto/aes-independant.c **** #include "aes-independant.h"
  20:.././crypto/aes-independant.c **** #include "hal.h"
  21:.././crypto/aes-independant.c **** 
  22:.././crypto/aes-independant.c **** #if HWCRYPTO
  23:.././crypto/aes-independant.c **** 
  24:.././crypto/aes-independant.c **** void aes_indep_init(void)
  25:.././crypto/aes-independant.c **** {
  26:.././crypto/aes-independant.c ****     HW_AES128_Init();
  27:.././crypto/aes-independant.c **** }
  28:.././crypto/aes-independant.c **** 
  29:.././crypto/aes-independant.c **** void aes_indep_key(uint8_t * key)
  30:.././crypto/aes-independant.c **** {
  31:.././crypto/aes-independant.c ****     HW_AES128_LoadKey(key);
  32:.././crypto/aes-independant.c **** }
  33:.././crypto/aes-independant.c **** 
  34:.././crypto/aes-independant.c **** void aes_indep_enc_pretrigger(uint8_t * pt)
  35:.././crypto/aes-independant.c **** {
  36:.././crypto/aes-independant.c ****     HW_AES128_Enc_pretrigger(pt);
  37:.././crypto/aes-independant.c **** }
  38:.././crypto/aes-independant.c **** 
  39:.././crypto/aes-independant.c **** void aes_indep_enc_posttrigger(uint8_t * pt)
  40:.././crypto/aes-independant.c **** {
  41:.././crypto/aes-independant.c ****     HW_AES128_Enc_posttrigger(pt);
  42:.././crypto/aes-independant.c **** }
  43:.././crypto/aes-independant.c **** 
  44:.././crypto/aes-independant.c **** void aes_indep_enc(uint8_t * pt)
  45:.././crypto/aes-independant.c **** {
  46:.././crypto/aes-independant.c ****     HW_AES128_Enc(pt);
  47:.././crypto/aes-independant.c **** }
  48:.././crypto/aes-independant.c **** 
  49:.././crypto/aes-independant.c **** void aes_indep_mask(uint8_t * m, uint8_t len)
  50:.././crypto/aes-independant.c **** {
  51:.././crypto/aes-independant.c **** }
  52:.././crypto/aes-independant.c **** 
  53:.././crypto/aes-independant.c **** #elif defined(AVRCRYPTOLIB)
  54:.././crypto/aes-independant.c **** #include "aes128_enc.h"
  55:.././crypto/aes-independant.c **** #include "aes_keyschedule.h"
  56:.././crypto/aes-independant.c **** 
  57:.././crypto/aes-independant.c **** aes128_ctx_t ctx;
  58:.././crypto/aes-independant.c **** 
  59:.././crypto/aes-independant.c **** void aes_indep_init(void)
  60:.././crypto/aes-independant.c **** {
  17               		.loc 1 60 0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23 0000 0895      		ret
  24               		.cfi_endproc
  25               	.LFE11:
  27               	.global	aes_indep_key
  29               	aes_indep_key:
  30               	.LFB12:
  61:.././crypto/aes-independant.c **** 	;
  62:.././crypto/aes-independant.c **** }
  63:.././crypto/aes-independant.c **** 
  64:.././crypto/aes-independant.c **** void aes_indep_key(uint8_t * key)
  65:.././crypto/aes-independant.c **** {
  31               		.loc 1 65 0
  32               		.cfi_startproc
  33               	.LVL0:
  34               	/* prologue: function */
  35               	/* frame size = 0 */
  36               	/* stack size = 0 */
  37               	.L__stack_usage = 0
  66:.././crypto/aes-independant.c **** 	aes128_init(key, &ctx);
  38               		.loc 1 66 0
  39 0002 60E0      		ldi r22,lo8(ctx)
  40 0004 70E0      		ldi r23,hi8(ctx)
  41 0006 0C94 0000 		jmp aes128_init
  42               	.LVL1:
  43               		.cfi_endproc
  44               	.LFE12:
  46               	.global	aes_indep_enc
  48               	aes_indep_enc:
  49               	.LFB13:
  67:.././crypto/aes-independant.c **** }
  68:.././crypto/aes-independant.c **** 
  69:.././crypto/aes-independant.c **** void aes_indep_enc(uint8_t * pt,uint8_t * aes_sbox2,uint8_t * rmask)
  70:.././crypto/aes-independant.c **** {
  50               		.loc 1 70 0
  51               		.cfi_startproc
  52               	.LVL2:
  53               	/* prologue: function */
  54               	/* frame size = 0 */
  55               	/* stack size = 0 */
  56               	.L__stack_usage = 0
  57 000a 9A01      		movw r18,r20
  71:.././crypto/aes-independant.c **** 	aes128_enc(pt, &ctx,aes_sbox2,rmask); /* encrypting the data block */
  58               		.loc 1 71 0
  59 000c AB01      		movw r20,r22
  60               	.LVL3:
  61 000e 60E0      		ldi r22,lo8(ctx)
  62 0010 70E0      		ldi r23,hi8(ctx)
  63               	.LVL4:
  64 0012 0C94 0000 		jmp aes128_enc
  65               	.LVL5:
  66               		.cfi_endproc
  67               	.LFE13:
  69               	.global	aes_indep_enc_pretrigger
  71               	aes_indep_enc_pretrigger:
  72               	.LFB18:
  73               		.cfi_startproc
  74               	/* prologue: function */
  75               	/* frame size = 0 */
  76               	/* stack size = 0 */
  77               	.L__stack_usage = 0
  78 0016 0895      		ret
  79               		.cfi_endproc
  80               	.LFE18:
  82               	.global	aes_indep_enc_posttrigger
  84               	aes_indep_enc_posttrigger:
  85               	.LFB15:
  72:.././crypto/aes-independant.c **** }
  73:.././crypto/aes-independant.c **** 
  74:.././crypto/aes-independant.c **** void aes_indep_enc_pretrigger(uint8_t * pt)
  75:.././crypto/aes-independant.c **** {
  76:.././crypto/aes-independant.c ****     ;
  77:.././crypto/aes-independant.c **** }
  78:.././crypto/aes-independant.c **** 
  79:.././crypto/aes-independant.c **** void aes_indep_enc_posttrigger(uint8_t * pt)
  80:.././crypto/aes-independant.c **** {
  86               		.loc 1 80 0
  87               		.cfi_startproc
  88               	.LVL6:
  89               	/* prologue: function */
  90               	/* frame size = 0 */
  91               	/* stack size = 0 */
  92               	.L__stack_usage = 0
  93 0018 0895      		ret
  94               		.cfi_endproc
  95               	.LFE15:
  97               	.global	aes_indep_mask
  99               	aes_indep_mask:
 100               	.LFB16:
  81:.././crypto/aes-independant.c ****     ;
  82:.././crypto/aes-independant.c **** }
  83:.././crypto/aes-independant.c **** 
  84:.././crypto/aes-independant.c **** void aes_indep_mask(uint8_t * m, uint8_t len)
  85:.././crypto/aes-independant.c **** {
 101               		.loc 1 85 0
 102               		.cfi_startproc
 103               	.LVL7:
 104               	/* prologue: function */
 105               	/* frame size = 0 */
 106               	/* stack size = 0 */
 107               	.L__stack_usage = 0
 108 001a 0895      		ret
 109               		.cfi_endproc
 110               	.LFE16:
 112               		.comm	ctx,176,1
 113               	.Letext0:
 114               		.file 2 "/usr/lib/avr/include/stdint.h"
 115               		.file 3 ".././crypto/avrcryptolib//aes/aes_types.h"
 116               		.file 4 ".././crypto/avrcryptolib//aes/aes_keyschedule.h"
 117               		.file 5 ".././crypto/avrcryptolib//aes/aes128_enc.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 aes-independant.c
     /tmp/ccd9RjYg.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccd9RjYg.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccd9RjYg.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccd9RjYg.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccd9RjYg.s:6      *ABS*:0000000000000034 __CCP__
     /tmp/ccd9RjYg.s:7      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccd9RjYg.s:8      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccd9RjYg.s:14     .text:0000000000000000 aes_indep_init
     /tmp/ccd9RjYg.s:29     .text:0000000000000002 aes_indep_key
                            *COM*:00000000000000b0 ctx
     /tmp/ccd9RjYg.s:48     .text:000000000000000a aes_indep_enc
     /tmp/ccd9RjYg.s:71     .text:0000000000000016 aes_indep_enc_pretrigger
     /tmp/ccd9RjYg.s:84     .text:0000000000000018 aes_indep_enc_posttrigger
     /tmp/ccd9RjYg.s:99     .text:000000000000001a aes_indep_mask

UNDEFINED SYMBOLS
aes128_init
aes128_enc
__do_clear_bss
